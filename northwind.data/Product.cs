//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Northwind.Data
{
    using System;
    using System.Collections.Generic;using Asya.Util.Wpf.Common.Library.Entity;
    
    public partial class Product :  BaseEntity
    {
        public Product()
        {
            this.Order_Details = new HashSet<Order_Detail>();
        }
    
        private int _product_ID;
    	public int Product_ID 
    	{ 
    		get { return _product_ID; } 
    		set
    		{
    			if (value != _product_ID) {
    				_product_ID = value;
    				 OnPropertyChanged("Product_ID");
    			}
    		} 
    	}
    
        private Nullable<int> _supplier_ID;
    	public Nullable<int> Supplier_ID 
    	{ 
    		get { return _supplier_ID; } 
    		set
    		{
    			if (value != _supplier_ID) {
    				_supplier_ID = value;
    				 OnPropertyChanged("Supplier_ID");
    			}
    		} 
    	}
    
        private Nullable<int> _category_ID;
    	public Nullable<int> Category_ID 
    	{ 
    		get { return _category_ID; } 
    		set
    		{
    			if (value != _category_ID) {
    				_category_ID = value;
    				 OnPropertyChanged("Category_ID");
    			}
    		} 
    	}
    
        private string _product_Name;
    	public string Product_Name 
    	{ 
    		get { return _product_Name; } 
    		set
    		{
    			if (value != _product_Name) {
    				_product_Name = value;
    				 OnPropertyChanged("Product_Name");
    			}
    		} 
    	}
    
        private string _english_Name;
    	public string English_Name 
    	{ 
    		get { return _english_Name; } 
    		set
    		{
    			if (value != _english_Name) {
    				_english_Name = value;
    				 OnPropertyChanged("English_Name");
    			}
    		} 
    	}
    
        private string _quantity_Per_Unit;
    	public string Quantity_Per_Unit 
    	{ 
    		get { return _quantity_Per_Unit; } 
    		set
    		{
    			if (value != _quantity_Per_Unit) {
    				_quantity_Per_Unit = value;
    				 OnPropertyChanged("Quantity_Per_Unit");
    			}
    		} 
    	}
    
        private Nullable<decimal> _unit_Price;
    	public Nullable<decimal> Unit_Price 
    	{ 
    		get { return _unit_Price; } 
    		set
    		{
    			if (value != _unit_Price) {
    				_unit_Price = value;
    				 OnPropertyChanged("Unit_Price");
    			}
    		} 
    	}
    
        private Nullable<short> _units_In_Stock;
    	public Nullable<short> Units_In_Stock 
    	{ 
    		get { return _units_In_Stock; } 
    		set
    		{
    			if (value != _units_In_Stock) {
    				_units_In_Stock = value;
    				 OnPropertyChanged("Units_In_Stock");
    			}
    		} 
    	}
    
        private Nullable<short> _units_On_Order;
    	public Nullable<short> Units_On_Order 
    	{ 
    		get { return _units_On_Order; } 
    		set
    		{
    			if (value != _units_On_Order) {
    				_units_On_Order = value;
    				 OnPropertyChanged("Units_On_Order");
    			}
    		} 
    	}
    
        private Nullable<short> _reorder_Level;
    	public Nullable<short> Reorder_Level 
    	{ 
    		get { return _reorder_Level; } 
    		set
    		{
    			if (value != _reorder_Level) {
    				_reorder_Level = value;
    				 OnPropertyChanged("Reorder_Level");
    			}
    		} 
    	}
    
        private bool _discontinued;
    	public bool Discontinued 
    	{ 
    		get { return _discontinued; } 
    		set
    		{
    			if (value != _discontinued) {
    				_discontinued = value;
    				 OnPropertyChanged("Discontinued");
    			}
    		} 
    	}
    
    
        public virtual Category Category { get; set; }
        public virtual ICollection<Order_Detail> Order_Details { get; set; }
        public virtual Supplier Supplier { get; set; }
    }
}
